{
  "$id": "topmodel.config.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Fichier de config du générateur",
  "required": [
    "app"
  ],
  "properties": {
    "app": {
      "type": "string",
      "description": "Nom de l'application."
    },
    "noWarn": {
      "type": "array",
      "description": "Liste des warnings à ignorer.",
      "items": {
        "type": "string",
        "description": "Code du warning (TMD9XXX) à ignorer ",
        "enum": [
          "TMD9001",
          "TMD9002",
          "TMD9003",
          "TMD9004"
        ]
      }
    },
    "modelRoot": {
      "type": "string",
      "description": "Chemin du dossier racine qui contient tous les fichiers tmd du modèle, qui seront chargés par le générateur (à l'exception du fichier de domaines qui est chargé à part). Si non renseigné, le dossier contenant le fichier de config sera utilisé."
    },
    "lockFileName": {
      "type": "string",
      "description": "Nom du fichier de lock",
      "default": "topmodel.lock"
    },
    "pluralizeTableNames": {
      "type": "boolean",
      "description": "Utilise le nom au pluriel des classes pour générer leur noms de table SQL."
    },
    "useLegacyRoleNames": {
      "type": "boolean",
      "description": "Transforme les noms de rôles d'associations en upper case (au lieu de constant case) pour déterminer le nom SQL des propriétés"
    },
    "i18n": {
      "type": "object",
      "description": "Configuration de la localisation de l'application.",
      "additionalProperties": false,
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "Template du chemin des dossiers de traductions entrants. Doit contenir le template {lang}",
          "default": "{lang}"
        },
        "defaultLang": {
          "type": "string",
          "description": "Langue par défaut de l'application."
        },
        "langs": {
          "type": "array",
          "description": "Liste des langues de l'application (autre que la langue par défaut).",
          "items": {
            "type": "string",
            "description": "Code du langage"
          }
        },
        "translateReferences": {
          "type": "boolean",
          "description": "Si les libellés des listes de références doivent être traduits.",
          "default": "true"
        }
      }
    },
    "generators": {
      "type": "array",
      "description": "Chemins vers des projets C# contenant des générateurs personnalisés",
      "items": {
        "type": "string"
      }
    },
    "csharp": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de C#.",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "language": {
            "type": "string",
            "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'csharp'."
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          "tagVariables": {
            "type": "object",
            "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".*": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                }
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "CSharpClassGen",
                "CSharpMapperGen",
                "CSharpDbContextGen",
                "CSharpRefAccessGen",
                "CSharpApiServerGen",
                "CSharpApiClientGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "persistentModelPath": {
            "type": "string",
            "description": "Localisation du modèle persisté, relative au répertoire de génération. Par défaut : {app}.{module}.Models."
          },
          "persistentReferencesModelPath": {
            "type": "string",
            "description": "Localisation des classes de références persistées, relative au répertoire de génération. Par défaut égal à 'persistentModelPath'."
          },
          "nonPersistentModelPath": {
            "type": "string",
            "description": "Localisation du modèle non persisté, relative au répertoire de génération. Par défaut : {app}.{module}.Models/Dto."
          },
          "apiRootPath": {
            "type": "string",
            "description": "Localisation du l'API générée (client ou serveur), relative au répertoire de génération. Par défaut : {app}.Web."
          },
          "apiFilePath": {
            "type": "string",
            "description": "Chemin vers lequel sont créés les fichiers d'endpoints générés, relative à la racine de l'API. Par défaut : {module}."
          },
          "apiGeneration": {
            "oneOf": [
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "enum": [
                  "Client",
                  "Server"
                ]
              },
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "useEFMigrations": {
            "type": "boolean",
            "description": "Utilise les migrations EF pour créer/mettre à jour la base de données."
          },
          "dbContextPath": {
            "type": "string",
            "description": "Localisation du DbContext, relative au répertoire de génération."
          },
          "dbContextName": {
            "type": "string",
            "description": "Nom du DbContext. Par défaut : {app}DbContext."
          },
          "referenceAccessorsInterfacePath": {
            "type": "string",
            "description": "Chemin vers lequel générer les interfaces d'accesseurs de référence. Par défaut : {DbContextPath}/Reference."
          },
          "referenceAccessorsImplementationPath": {
            "type": "string",
            "description": "Chemin vers lequel générer les implémentation d'accesseurs de référence. Par défaut : {DbContextPath}/Reference."
          },
          "referenceAccessorsName": {
            "type": "string",
            "description": "Nom des accesseurs de référence (préfixé par 'I' pour l'interface). Par défaut : {module}ReferenceAccessors."
          },
          "noAsyncControllers": {
            "type": "boolean",
            "description": "Génère des contrôleurs d'API synchrones."
          },
          "useLowerCaseSqlNames": {
            "type": "boolean",
            "description": "Utilise des noms de tables et de colonnes en lowercase."
          },
          "dbSchema": {
            "type": "string",
            "description": "Le nom du schéma de base de données à cibler (si non renseigné, EF utilise 'dbo')."
          },
          "useLatestCSharp": {
            "type": "boolean",
            "description": "Utilise les features C# 10 dans la génération."
          },
          "kinetix": {
            "type": "boolean",
            "description": "Si on génère avec Kinetix."
          },
          "domainNamespace": {
            "type": "string",
            "description": "Namespace de l'enum de domaine pour Kinetix. Par défaut : '{app}.Common'."
          },
          "noColumnOnAlias": {
            "type": "boolean",
            "description": "Retire les attributs de colonnes sur les alias."
          },
          "noPersistence": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "Considère tous les classes comme étant non-persistantes (= pas d'attribut SQL)."
              },
              {
                "type": "string",
                "description": "Considère tous les classes comme étant non-persistantes (= pas d'attribut SQL).",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "mapperTagsOverrides": {
            "type": "array",
            "description": "Si un mapper contient au moins une classe de ces tags, alors il sera généré avec les tags de cette classe (au lieu du comportement par défaut qui priorise les tags de la classe persistée puis de celle qui définit le mapper).",
            "items": {
              "type": "string"
            }
          },
          "enumsForStaticReferences": {
            "type": "boolean",
            "description": "Utilise des enums au lieu de strings pour les PKs de listes de référence statiques."
          },
          "useEFComments": {
            "type": "boolean",
            "description": "Annote les tables et les colonnes générées par EF avec les commentaires du modèle (nécessite `UseEFMigrations`)."
          }
        }
      }
    },
    "javascript": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de Javascript.",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "language": {
            "type": "string",
            "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'ts'."
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "tagVariables": {
            "type": "object",
            "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".*": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "JSDefinitionGen",
                "JSReferenceGen",
                "JSNGApiClientGen",
                "JSApiClientGen",
                "JSResourceGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "modelRootPath": {
            "type": "string",
            "description": "Localisation du modèle, relative au répertoire de génération. Si non renseigné, aucun modèle ne sera généré."
          },
          "resourceRootPath": {
            "type": "string",
            "description": "Localisation des ressources i18n, relative au répertoire de génération. Si non renseigné, aucun fichier ne sera généré"
          },
          "apiClientRootPath": {
            "type": "string",
            "description": "Localisation des clients d'API, relative au répertoire de génération. Si non renseigné, aucun fichier ne sera généré."
          },
          "apiClientFilePath": {
            "type": "string",
            "description": "Chemin vers lequel sont créés les fichiers d'endpoints générés, relatif à la racine de l'API.",
            "default": "{module}"
          },
          "fetchPath": {
            "type": "string",
            "description": "Chemin (ou alias commençant par '@') vers un 'fetch' personnalisé, relatif au répertoire de génération."
          },
          "domainPath": {
            "type": "string",
            "description": "Chemin (ou alias commençant par '@') vers le fichier 'domain', relatif au répertoire de génération.",
            "default": "../domains"
          },
          "targetFramework": {
            "type": "string",
            "description": "Framework cible pour la génération.",
            "default": "focus",
            "enum": [
              "focus",
              "angular",
              "vanilla"
            ]
          },
          "resourceMode": {
            "type": "string",
            "description": "Mode de génération (JS, JSON ou JSON Schema).",
            "enum": [
              "js",
              "json"
            ]
          },
          "translateReferences": {
            "type": "boolean",
            "description": "Si les listes de référence doivent être traduites",
            "default": "true"
          },
          "generateComments": {
            "type": "boolean",
            "description": "Ajoute les commentaires dans les entités JS générées."
          },
          "referenceMode": {
            "type": "string",
            "description": "Mode de génération des listes de références (définitions ou valeurs).",
            "enum": [
              "definition",
              "values"
            ],
            "default": "definition"
          }
        }
      }
    },
    "jpa": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de Jpa.",
        "additionalProperties": false,
        "required": [
          "tags",
          "outputDirectory"
        ],
        "properties": {
          "language": {
            "type": "string",
            "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'java'."
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "tagVariables": {
            "type": "object",
            "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".*": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "JpaModelGen",
                "JpaInterfaceGen",
                "JpaMapperGenerator",
                "JpaDaoGen",
                "JpaResourceGen",
                "SpringApiServerGen",
                "SpringApiClientGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "entitiesPath": {
            "type": "string",
            "description": "Localisation des classes persistées du modèle, relative au répertoire de génération. Par défaut, 'javagen:{app}/entities/{module}'."
          },
          "daosPath": {
            "type": "string",
            "description": "Localisation des DAOs, relative au répertoire de génération."
          },
          "dtosPath": {
            "type": "string",
            "description": "Localisation des classes non persistées du modèle, relative au répertoire de génération. Par défaut, 'javagen:{app}/dtos/{module}'."
          },
          "apiPath": {
            "type": "string",
            "description": "Localisation du l'API générée (client ou serveur), relative au répertoire de génération. Par défaut, 'javagen:{app}/api/{module}'."
          },
          "apiGeneration": {
            "oneOf": [
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "enum": [
                  "Client",
                  "Server"
                ]
              },
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "resourcesPath": {
            "type": "string",
            "description": "Localisation des ressources, relative au répertoire de génération."
          },
          "enumShortcutMode": {
            "type": "boolean",
            "description": "Option pour générer des getters et setters vers l'enum des références plutôt que sur la table",
            "default": "false"
          },
          "fieldsEnum": {
            "type": "string",
            "description": "Option pour générer une enum des champs des classes persistées",
            "default": "None",
            "enum": [
              "None",
              "Persisted",
              "Dto",
              "Persisted_Dto"
            ]
          },
          "fieldsEnumInterface": {
            "type": "string",
            "description": "Précise l'interface des fields enum générés."
          },
          "persistenceMode": {
            "type": "string",
            "description": "Mode de génération de la persistence ('Javax' ou 'Jakarta')",
            "enum": [
              "Javax",
              "Jakarta"
            ]
          },
          "identity": {
            "type": "object",
            "description": "Options de génération de la séquence",
            "properties": {
              "mode": {
                "type": "string",
                "description": "Mode de génération des séquences.",
                "enum": [
                  "none",
                  "sequence",
                  "identity"
                ],
                "default": "identity"
              },
              "increment": {
                "type": "number",
                "description": "Incrément de la séquence générée."
              },
              "start": {
                "type": "number",
                "description": "Début de la séquence générée."
              }
            }
          }
        }
      }
    },
    "sql": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de SQL.",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "language": {
            "type": "string",
            "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'sql'."
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "SsdtGen",
                "ProceduralSqlGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "targetDBMS": {
            "type": "string",
            "description": "SGBD cible ('postgre' ou 'sqlserver').",
            "enum": [
              "sqlserver",
              "postgre"
            ]
          },
          "procedural": {
            "type": "object",
            "description": "Config pour la génération de SQL 'procédurale'.",
            "additionalProperties": false,
            "properties": {
              "crebasFile": {
                "type": "string",
                "description": "Emplacement du fichier de création de base."
              },
              "uniqueKeysFile": {
                "type": "string",
                "description": "Emplacement du fichier de création des index uniques."
              },
              "indexFKFile": {
                "type": "string",
                "description": "Emplacement du fichier de création des clés étrangères."
              },
              "typeFile": {
                "type": "string",
                "description": "Emplacement du fichier de création des types."
              },
              "initListFile": {
                "type": "string",
                "description": "Emplacement du script d'insertion des données des listes de référence."
              },
              "identity": {
                "type": "object",
                "description": "Options de génération de la séquence",
                "properties": {
                  "mode": {
                    "type": "string",
                    "description": "Mode de génération des séquences.",
                    "enum": [
                      "none",
                      "sequence",
                      "identity"
                    ],
                    "default": "identity"
                  },
                  "increment": {
                    "type": "number",
                    "description": "Incrément de la séquence générée."
                  },
                  "start": {
                    "type": "number",
                    "description": "Début de la séquence générée."
                  }
                }
              }
            }
          },
          "ssdt": {
            "type": "object",
            "description": "Config pour la génération SSDT",
            "additionalProperties": false,
            "properties": {
              "tableScriptFolder": {
                "type": "string",
                "description": "Dossier du projet pour les scripts de déclaration de table."
              },
              "tableTypeScriptFolder": {
                "type": "string",
                "description": " Dossier du projet pour les scripts de déclaration de type table."
              },
              "initListScriptFolder": {
                "type": "string",
                "description": "Dossier du projet pour les scripts d'initialisation des listes de références."
              },
              "initListMainScriptName": {
                "type": "string",
                "description": "Fichier du projet référençant les scripts d'initialisation des listes de références."
              },
              "disableIdentity": {
                "type": "boolean",
                "description": "Désactive les colonnes d'identité."
              }
            }
          }
        }
      }
    },
    "translation": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "JTranslationOutGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "rootPath": {
            "type": "string",
            "description": "Template du chemin des dossiers de traductions sortants (manquants). Doit contenir le template {lang}",
            "default": "{lang}"
          },
          "defaultLang": {
            "type": "string",
            "description": "Langue par défaut (celle dans laquelle sont écris les labels dans les fichiers .tmd"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Code du angage"
            }
          }
        }
      }
    }
  },
  "additionalProperties": false
}