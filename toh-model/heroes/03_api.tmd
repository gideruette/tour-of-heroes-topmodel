module: Heroes
tags:
  - back
  - front
uses:
  - heroes/01_entities
  - heroes/02_dtos
options:
  endpoints:
    fileName: Hero
    prefix: hero
---
endpoint:
  name: GetHeroes
  method: GET
  route: ""
  description: Renvoie la liste des héros filtrés avec le terme le cas échéant
  params:
    - name: Term
      comment: Terme de la recherche
      domain: DO_LIBELLE
  returns:
    composition: HeroDto
    name: HeroList
    comment: Liste des héros
    domain: DO_LIST
---
endpoint:
  name: AddHero
  method: POST
  route: ""
  description: Création d'un héro
  params:
    - composition: HeroCreationDto
      name: HeroUpdate
      comment: Informations à modifier
  returns:
    composition: HeroDto
    name: HeroList
    comment: Liste des héros
---
endpoint:
  name: GetHero
  method: GET
  route: "/{herId}"
  description: Renvoie le détail d'un héro
  params:
    - alias:
        class: Hero
        property: Id
  returns:
    composition: HeroDto
    name: HeroList
    comment: Liste des héros
---
endpoint:
  name: UpdateHero
  method: PATCH
  route: "/{herId}"
  description: Modification d'un héro
  params:
    - alias:
        class: Hero
        property: Id
    - composition: HeroUpdateDto
      name: HeroUpdate
      comment: Informations à modifier
  returns:
    composition: HeroDto
    name: HeroList
    comment: Liste des héros
---
endpoint:
  name: DeleteHero
  method: DELETE
  route: "/{herId}"
  description: Suppression d'un héro
  params:
    - alias:
        class: Hero
        property: Id
